Формат решения
Загрузка данных (создание DataFrame). df = spark.read....
Просмотр структуры (есть ли null значения, какие типы)
	df_task.printSchema()
	df_task.show(2)
Решение задачи
Проверка результата решения

Файлы с данными лежат в разных форматах, так что перед чтением проверьте формат файла и то как он составлен.


1. Напишите запрос, возвращающий строку следующего вида для каждого сотрудника: "<фамилия> зарабатывает <зарплата> каждый месяц, но хочет получать <зарплата * 3>". 
Назовите колонку 'Dream Salaries'. Результат сохранить в формате parquet со сжатием GZIP

2. Напишите запрос, возвращающий адреса всех департаментов. Запрос должен возвращать ID локации, адрес (улицу), город, штат и страну.

3. Напишите запрос, возвращающий фамилию, ID отдела и наименование отдела для каждого сотрудника; Результат сохранить в формате avro со сжатием GZIP

4. Напишите запрос, возвращающий фамилию, ID сотрудника, фамилию менеджера и ID менеджера для каждого сотрудника (для сотрудников, у которых нет менеджера, в этих колонках должен быть NULL). 
Назовите колонки 'Employee', 'Emp#', 'Manager', 'Mgr#'. Результат сохранить в формате avro со сжатием Snappy

5. Напишите запрос, возвращающий фамилии и зарплаты всех сотрудников, которые подчиняются сотруднику King. Используйте подзапрос.

6. Напишите запрос, возвращающий фамилии всех сотрудников, получающих больше, чем любой сотрудник отдела с ID 60.

7. Напишите запрос, возвращающий ID, фамилии и зарплаты всех сотрудников, работающих в одном отделе с работником, в чьей фамилии есть буква 'u' и получающих больше средней зарплаты в компании.

8. Выведите фамилии, id отдела и название отдела для всех сотрудников, не привязанных ни к одному отделу, а также список отделов, к которым не привязан ни один сотрудник.
